#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Nov  7 15:55:23 2023

@author: achref
"""
import torch
from torch import nn
import torch.nn.functional as F

class VariationlAutoEncoder(nn.Module):
    
    
    def __init__(self):
        super().__init__()
        
        #encoder
        self.img_2hid = nn.Linear(784, 200)
        self.hid_2mu = nn.Linear(200, 20)
        self.hid_2sigma = nn.Linear(200, 20)
        #decoder
        self.z_2hid = nn.Linear(20, 200)
        self.hid_2img = nn.Linear(200, 784)
        
        
        self.relu = nn.ReLU()
        
    def encode(self,x):
        h = self.relu(self.img_2hid(x))
        mu = self.hid_2mu(h) 
        sigma = self.hid_2sigma(h)
        return mu, sigma
        
    def decode(self,x):
        h= self.relu(self.z_2hid(x))
        return torch.sigmoid(self.hid_2img(h))
        
        
    def forward(self,x):
        mu, sigma = self.encode(x)
       
        epsilon = torch.randn_like(sigma)
        z_reparam = mu + sigma* epsilon

        x_reconstructed = self.decode(z_reparam)
        return x_reconstructed, mu, sigma
    
    
x=torch.randn(2, 784,)
vae = VariationlAutoEncoder()
x,m,s = vae(x)
print(x.shape)
print(m.shape)
print(s.shape)